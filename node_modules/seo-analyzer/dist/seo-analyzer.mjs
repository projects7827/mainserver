import t from"fs";import e from"path";import{VirtualConsole as r,JSDOM as s}from"jsdom";import n from"cli-progress";import o from"colors";import i from"cfonts";import a from"axios";import l from"sitemap-stream-parser";import h from"express";import u from"next";const c={titleLengthRule:function(t,e){return new Promise(r=>{const s=t.window.document.querySelector("title");s||r("This HTML without <title> tag");const n=s.length;n<e.min&&r(`<title> too short(${n}). The minimum length should be ${e.min} characters.`),n>e.max&&r(`<title> too long(${n}). The maximum length should be ${e.max} characters.`),r(null)})},imgTagWithAltAttributeRule:function(t){return new Promise(e=>{let r=0,s=0;const n=[];t.window.document.querySelectorAll("img").forEach(t=>{t.alt||r++,t.src||s++}),s>0&&n.push(`There are ${s} <img> tag without src attribute`),r>0&&n.push(`There are ${r} <img> tag without alt attribute`),(s||r)&&e(n),e(null)})},aTagWithRelAttributeRule:function(t){return new Promise(e=>{let r=0;t.window.document.querySelectorAll("a").forEach(t=>{t.rel||r++}),r>0&&e(`There are ${r} <a> tag without rel attribute`),e(null)})},canonicalLinkRule:function(t){return new Promise(e=>{const r=t.window.document.querySelector('head > link[rel="canonical"]');r||e('This HTML without <link rel="canonical" href="..."> link'),r&&!r.href&&e("The canonical link without href attribute"),r&&"/"!==r.href.substr(-1)&&e("The href attribute does not have a slash at the end of the link."),e(null)})},metaBaseRule:function(t,e={list:[]}){return new Promise(r=>{const s=[];e&&e.names&&e.names.length&&e.names.forEach(e=>{const r=t.window.document.querySelector(`head > meta[name="${e}"]`);r?r.content||s.push(`The content attribute for the <meta name="${e}" content=""> tag is empty`):s.push(`This HTML without <meta name="${e}"> tag`)}),r(s)})},metaSocialRule:function(t,e={properties:[]}){return new Promise(r=>{const s=[];e&&e.properties&&e.properties.length&&e.properties.forEach(e=>{const r=t.window.document.querySelector(`head > meta[property="${e}"]`);r?r.content||s.push(`The content attribute for the <meta property="${e}" content=""> tag is empty`):s.push(`This HTML without <meta property="${e}"> tag`)}),r(s)})}};class g{result(t){this._logResult(t)}error(t,e){this._logError(t),e&&process.exit(1)}success(t){this._logSuccess(t)}info(t){this._logInfo(t)}printTextToConsole(t){const e=t.replace(" ","|");i.say(e,{font:"block",align:"left",colors:["system"],background:"transparent",letterSpacing:1,lineHeight:1,space:!0,maxLength:"0",gradient:!1,independentGradient:!1,transitionGradient:!1,env:"node"})}_logResult(t){if(!t.some(t=>t.report.length))return this._logSuccess("\nüëç SEO defects were not detected.\n");this._logInfo("\nüöÄ  Report of errors");for(const e of t)this._logInfo("\nFile: "+e.source.trim()),this._logError(""+e.report.join("\n"));return this._logSuccess("\n-------- üöÄ Finished! --------\nThanks for using Seo Analyzer!\n"),process.exit(1)}_logError(t){console.error(""+o.red(t))}_logInfo(t){console.log(""+o.yellow(t))}_logSuccess(t){console.log(""+o.green(t))}}class p{constructor(){this.consoleProgressBar=new n.Bar({format:"Processing... |"+o.green("{bar}")+"| {percentage}% || {value}/{total} Pages",barCompleteChar:"‚ñà",barIncompleteChar:"‚ñë",hideCursor:!0}),this.logger=new g,this.inputUrl="",this.ignoreUrls=""}async run(t,e,r){this.inputUrl="http://localhost:"+t,this.ignoreUrls=e;const s=await this._getLinksFromSitemap(r);return await this._getHtmlDomFromLinks(s)}_getLinksFromSitemap(t){return this.logger.info(`üöÄ  Get sitemap from ${this.inputUrl}\n`),new Promise(e=>{const r=`${this.inputUrl}/${t}`,s=[];l.parseSitemaps(r,t=>{const e=t.replace(/^.*\/\/[^/]+/,"");-1===this.ignoreUrls.indexOf(e)&&s.push(this._formatLink(t))},t=>{t?this.logger.error("‚ùå  Sitemap not found\n",1):s.length?(this.logger.success("‚úÖ  Done\n"),e(s)):this.logger.error("‚ùå  Links not found\n",1)})})}_formatLink(t){return t.replace(/^.*\/\/[^/]+/,this.inputUrl)}sleep(t){return new Promise(e=>setTimeout(e,t))}async _getHtmlDomFromLinks(t){const e=[],r=[];this.logger.info("üöÄ  Parsing HTML\n"),this.consoleProgressBar.start(t.length,0);for(const s of t)r.push(a.get(s).then(t=>{t&&200===t.status&&e.push({source:s,text:t.data})}).catch(t=>{const e=t&&t.response&&t.response.status||500;console.log(`Error: ${t} - ${s}`),console.log(`\n${o.yellow("==>")} ${o.white(s)} ${o.red(e)}`)}).finally(()=>{this.consoleProgressBar.increment()})),await this.sleep(500);return Promise.all(r).then(()=>(this.consoleProgressBar.stop(),e))}}class m{constructor(){this.logger=new g,this.scraper=new p,this.consoleProgressBar=new n.Bar({format:"Processing... |"+o.green("{bar}")+"| {percentage}% || {value}/{total} Folders",barCompleteChar:"‚ñà",barIncompleteChar:"‚ñë",hideCursor:!0}),this.badType='The inputFiles function takes an array only ["index.html", "...", "..."]',this.emptyList='You need to pass an array to the inputFiles function ["index.html", "...", "..."]',this.ignoreFolders=[],this.ignoreFiles=[]}async files(t=[],e=[]){Array.isArray(t)&&t.length||this.logger.error('‚ùå  The "inputFiles" method expects an array of files.\n',!0),Array.isArray(e)||this.logger.error('‚ùå  The "ignoreFiles" method expects an array of ignore files.\n',!0),this.logger.info("\nüöÄ  Parsing files\n"),0===t.length&&this.logger.error(this.emptyList),Array.isArray(t)||this.logger.error(this.badType),this.ignoreFiles=e;const r=await this._getHtml(t);return await this._getDom(r)}async folders(t=[],e=[],r=[]){Array.isArray(t)&&t.length||this.logger.error('‚ùå  The "inputFolders" method expects an array of folders.\n',!0),Array.isArray(e)||this.logger.error('‚ùå  The "ignoreFolders" method expects an array of ignore folders.\n',!0),this.logger.info("üöÄ  Parsing folders\n"),this.consoleProgressBar.start(t.length,0),this.ignoreFolders=e,this.ignoreFiles=r;const s=await this._getFilesFromFolders(t);return await this.files(s,r)}async spa(t,e=[],r){const s=await this.scraper.run(t,e,r);return await this._getDom(s)}async _getFilesFromFolders(t=[]){const e=[];for(const r of t){const t=await this._getFilesFromFolder(r);this.consoleProgressBar.increment(),e.push(...t)}return this.consoleProgressBar.stop(),e.length||this.logger.error("\n‚ùå  No files found.\n",!0),e}_getFilesFromFolder(r=[]){try{const s=t.readdirSync(r).map(t=>e.join(r,t)),n=s.filter(r=>t.statSync(r).isFile()&&".html"===e.extname(r)),o=s.filter(e=>!n.includes(e)&&t.statSync(e).isDirectory()).filter(t=>!this.ignoreFolders.includes(t)).reduce((t,e)=>t.concat(this._getFilesFromFolder(e)),[]);return[...n,...o]}catch(t){return this.logger.error(`\n\n‚ùå Folder "${r}" not found\n`),[]}}_getHtml(e){const r=[],s=new n.Bar({format:"Processing... |"+o.green("{bar}")+"| {percentage}% || {value}/{total} Sources",barCompleteChar:"‚ñà",barIncompleteChar:"‚ñë",hideCursor:!0});return s.start(e.length,0),e.forEach(e=>{if(!this.ignoreFiles.includes(e))try{const n=t.readFileSync(e,"utf8");r.push({source:e,text:n}),s.increment()}catch(t){s.increment(),this.logger.error(`\n\nFile "${e}" not found\n`)}}),s.stop(),r.length||this.logger.error("\n‚ùå  No files found.\n",!0),r}_getDom(t){const e=[],i=new n.Bar({format:"Handling html |"+o.green("{bar}")+"| {percentage}% || {value}/{total} Sources",barCompleteChar:"‚ñà",barIncompleteChar:"‚ñë",hideCursor:!0});this.logger.info("\nüöÄ  Get DOM from HTML\n"),i.start(t.length,0);const a=new r;return t.forEach(t=>{let r=new s(t.text,{virtualConsole:a});e.push({source:t.source,dom:r}),i.increment()}),i.stop(),e}}class f{constructor(){this.consoleProgressBar=new n.Bar({format:"Ranning rules |"+o.green("{bar}")+"| {percentage}% || {value}/{total} Rules",barCompleteChar:"‚ñà",barIncompleteChar:"‚ñë",hideCursor:!0}),this.badType='The inputFiles function takes an array only ["index.html", "...", "..."]',this.emptyList='You need to pass an array to the inputFiles function ["index.html", "...", "..."]'}async run(t,e){0===t.length&&this.logger.error(this.emptyList),Array.isArray(t)||this.logger.error(this.badType);return await this._startAnalyzer(t,e)}async _startAnalyzer(t,e){const r=[];for(const s of t){console.log(`\n${o.blue("==>")} Analysis ${o.white(s.source)}`);const t=await this._analyzeDOM(s.dom,e);t&&t.length&&r.push({source:s.source,report:t})}return r}async _analyzeDOM(t,e){const r=[];this.consoleProgressBar.start(e.length,0);for(const s of e){let e=null;try{e=await s.rule(t,s.options)}catch(t){e=t}Array.isArray(e)?r.push(...e):e&&r.push(e),this.consoleProgressBar.increment()}return this.consoleProgressBar.stop(),r}}class d{constructor(){this.analyzer=new f}async object(t,e){return await this.analyzer.run(t,e)}async json(t,e){const r=await this.analyzer.run(t,e);return JSON.stringify(r,null,2)}}class y{constructor(){this.logger=new g,this._input=new m,this.port=parseInt(process.env.PORT,10)||3e3,this.app=u({dev:!1}),this.handle=this.app.getRequestHandler(),this.status={}}run(){return new Promise((t,e)=>{this.app.prepare().then(()=>{const e=h();e.all("*",(t,e)=>this.handle(t,e)),e.listen(this.port,e=>{if(e)throw e;this.logger.info(`üöÄ  Ready on http://localhost:${this.port}\n`),t({status:"Active"})})}).catch(t=>{this.logger.error("‚ùå  Error Starting Server\n"),console.error(t.stack),process.exit(1),e(new Error("Error Starting Server"))})})}async inputSSR(t,e=[],r){this.port=t,this.status=await this.run();return this._input.spa(this.port,e,r)}}const _=h(),w=new g;class F{constructor(){return this._logger=new g,this._input=new m,this._output=new d,this._nextServer=new y,this._inputData=[],this._defaultRules=c,this._rules=[],this._ignoreFolders=[],this._ignoreFiles=[],this._ignoreUrls=[],this}ignoreFiles(t){return this._ignoreFiles=t,this}ignoreFolders(t){return this._ignoreFolders=t,this}ignoreUrls(t){return this._ignoreUrls=t,this}inputFiles(t){return 0!==this._inputData.length||(this._logger.printTextToConsole("SEO Analyzer"),this._inputData=this._input.files(t,this._ignoreFiles)),this}inputFolders(t){return 0!==this._inputData.length||(this._logger.printTextToConsole("SEO Analyzer"),this._inputData=this._input.folders(t,this._ignoreFolders,this._ignoreFiles)),this}inputSpaFolder(t,r="sitemap.xml",s=9999){return this._inputData?(this._logger.printTextToConsole("SEO Analyzer"),function(t,r){_.use(h.static(t)),_.get("/",(t,r)=>{r.sendFile(e.join(__dirname,"/index.html"))}),_.listen(r),w.info(`üöÄ  Server started on port ${r}\n`),w.success("‚úÖ  Done\n")}(t,s),this._inputData=this._input.spa(s,this._ignoreUrls,r),this):this}inputNextJs(t="sitemap.xml",e=3e3){return this._inputData?(this._logger.printTextToConsole("SEO Analyzer"),this._inputData=this._nextServer.inputSSR(e,this._ignoreUrls,t),this):this}addRule(t,e={}){return"string"==typeof t?t in c?this._rules.push({rule:c[t],options:e}):this._logger.error(`\n\n‚ùå  Rule "${t}" not found\n`,1):"function"==typeof t?this._rules.push({rule:t,options:e}):this._logger.error("\n\n‚ùå  Rule must be a function or a string\n",1),this}outputConsole(){return(async()=>{const t=await this._output.object(await this._inputData,this._rules);this._logger.result(t)})(),this}outputJson(t){return(async()=>{const e=await this._output.json(await this._inputData,this._rules);t(e)})(),this}outputObject(t){return(async()=>{const e=await this._output.object(await this._inputData,this._rules);t(e)})(),this}}export{F as default};
